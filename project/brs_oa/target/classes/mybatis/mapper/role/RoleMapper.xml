<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brs.oa.role.mapper.RoleMapper">

    <sql id="role_sql">
        role.role_no,
        role_name,
        is_enabled,
        role_desc
    </sql>
    <sql id="permission_sql">
        p.permission_no,
        permission_name,
        permission_code,
        p.is_enabled
    </sql>

    <sql id="role_permission_sql">
        role.role_no,
        role.role_name,
        role.is_enabled,
        role.role_desc,


        p.permission_no as permissionNo,
        p.permission_name as permissionName,
        p.permission_code as permissionCode,
        p.is_enabled


    </sql>



    <sql id="where_role_no">
        <trim prefix="WHERE">
            <if test="roleNo != null"> role.role_no=#{roleNo}</if>
        </trim>
    </sql>

    <sql id="where_emp_no">
        <trim prefix="WHERE">
            <if test="empNo != null"> emp_no=#{empNo}</if>
        </trim>
    </sql>

    <insert id="insert">
        INSERT INTO  role
        (role_name,is_enabled, role_desc )
        VALUES(
            #{role.roleName},
            #{role.isEnabled},
            #{role.roleDesc}
        )
    </insert>

    <update id="update">
        UPDATE role
        SET
           role_name =    #{role.roleName},
           is_enabled=   #{role.isEnabled},
           role_desc =  #{role.roleDesc}
          WHERE
            role_no = #{role.roleNo}

    </update>

    <delete id="delete">
        DELETE  FROM role
        WHERE  role_no = #{roleNo}
    </delete>

    <select id="queryRoleNamesByEmpo" resultType="java.lang.String">
        SELECT
            role.role_name
        FROM
            role
        LEFT  JOIN
            staff_role_relation AS  srr
        ON
            srr.role_no = role.role_no
        WHERE
            role.is_enabled =1  AND  srr.emp_no = #{empNo}
    </select>

    <select id="selectRoleList" resultType="com.brs.oa.role.entity.Role">
         SELECT
            <include refid="role_sql"></include>
        FROM
            role
        <include refid="where_role_no"></include>
    </select>

    <select id="selectRoleListByEmp" resultType="com.brs.oa.role.entity.Role">
        SELECT
        <include refid="role_sql"></include>
        FROM
        role
        LEFT JOIN  staff_role_relation srr
        ON  srr.role_no = role.role_no

        <include refid="where_emp_no"></include>


    </select>




    <resultMap id="roleMap" type="com.brs.oa.role.vo.RoleVo" autoMapping="true">
        <id property="roleNo" column="role_no"></id>
        <collection property="permissionList" ofType="com.brs.oa.permission.entity.Permission" autoMapping="true">
         <id property="permissionNo" column="permissionNo"></id>
            <result column="permissionName" property="permissionName"></result>
        </collection>
    </resultMap>

    <select id="selectRolePermissionList" resultType="com.brs.oa.role.vo.RoleVo">
       SELECT
          <include refid="role_permission_sql"></include>
       FROM role
        LEFT JOIN role_permission_relation AS rpr
        ON role.role_no = rpr.role_no
        LEFT JOIN permission AS p
        ON rpr.permission_no = p.permission_no
        <include refid="where_role_no"></include>
    </select>



    <insert id="saveRolePermissionList">
        INSERT INTO role_permission_relation
        (role_no,permission_no)
        VALUES
        <foreach collection="permissionNoList" item="item" index="index" separator=",">
            <if test="roleNo != null">
                (#{roleNo},#{item})
            </if>
        </foreach>

        ON DUPLICATE KEY UPDATE
        permission_no = VALUES(permission_no)


    </insert>


</mapper>
